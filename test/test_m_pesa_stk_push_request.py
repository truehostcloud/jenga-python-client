# coding: utf-8

"""
    Jenga API

    API for Jenga payment processing and transaction management

    The version of the OpenAPI document: 3.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jenga_client.models.m_pesa_stk_push_request import MPesaStkPushRequest

class TestMPesaStkPushRequest(unittest.TestCase):
    """MPesaStkPushRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MPesaStkPushRequest:
        """Test MPesaStkPushRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MPesaStkPushRequest`
        """
        model = MPesaStkPushRequest()
        if include_optional:
            return MPesaStkPushRequest(
                order = jenga_client.models.m_pesa_stk_push_request_order.MPesaStkPushRequest_order(
                    order_reference = 'OR28922980077', 
                    order_amount = 2, 
                    order_currency = 'KES', 
                    source = 'APICHECKOUT', 
                    country_code = 'KE', 
                    description = 'Purchase', ),
                customer = jenga_client.models.m_pesa_stk_push_request_customer.MPesaStkPushRequest_customer(
                    name = 'John Doe', 
                    email = 'xyx2@gmail.com', 
                    phone_number = '0722000111', 
                    identity_number = '0000000', 
                    first_address = '', 
                    second_address = '', ),
                payment = jenga_client.models.m_pesa_stk_push_request_payment.MPesaStkPushRequest_payment(
                    payment_reference = 'MKQR28922980073', 
                    payment_currency = 'KES', 
                    channel = 'MOBILE', 
                    service = 'MPESA', 
                    provider = 'JENGA', 
                    callback_url = 'https://webhook.site/5c74a733-1caa-4f10-b876-3df9c0d7453c', 
                    details = jenga_client.models.m_pesa_stk_push_request_payment_details.MPesaStkPushRequest_payment_details(
                        msisdn = '0722000000', 
                        payment_amount = 2, ), )
            )
        else:
            return MPesaStkPushRequest(
                order = jenga_client.models.m_pesa_stk_push_request_order.MPesaStkPushRequest_order(
                    order_reference = 'OR28922980077', 
                    order_amount = 2, 
                    order_currency = 'KES', 
                    source = 'APICHECKOUT', 
                    country_code = 'KE', 
                    description = 'Purchase', ),
                customer = jenga_client.models.m_pesa_stk_push_request_customer.MPesaStkPushRequest_customer(
                    name = 'John Doe', 
                    email = 'xyx2@gmail.com', 
                    phone_number = '0722000111', 
                    identity_number = '0000000', 
                    first_address = '', 
                    second_address = '', ),
                payment = jenga_client.models.m_pesa_stk_push_request_payment.MPesaStkPushRequest_payment(
                    payment_reference = 'MKQR28922980073', 
                    payment_currency = 'KES', 
                    channel = 'MOBILE', 
                    service = 'MPESA', 
                    provider = 'JENGA', 
                    callback_url = 'https://webhook.site/5c74a733-1caa-4f10-b876-3df9c0d7453c', 
                    details = jenga_client.models.m_pesa_stk_push_request_payment_details.MPesaStkPushRequest_payment_details(
                        msisdn = '0722000000', 
                        payment_amount = 2, ), ),
        )
        """

    def testMPesaStkPushRequest(self):
        """Test MPesaStkPushRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
