# coding: utf-8

"""
    Jenga API

    API for Jenga payment processing and transaction management

    The version of the OpenAPI document: 3.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jenga_client.models.imt_within_equity_request import IMTWithinEquityRequest

class TestIMTWithinEquityRequest(unittest.TestCase):
    """IMTWithinEquityRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IMTWithinEquityRequest:
        """Test IMTWithinEquityRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IMTWithinEquityRequest`
        """
        model = IMTWithinEquityRequest()
        if include_optional:
            return IMTWithinEquityRequest(
                source = jenga_client.models.imt_within_equity_request_source.IMTWithinEquityRequest_source(
                    country_code = 'KE', 
                    name = 'Merchant name', 
                    account_number = '0011547896523', ),
                sender = jenga_client.models.imt_within_equity_request_sender.IMTWithinEquityRequest_sender(
                    name = 'Sender Name', 
                    document_type = 'NationalId', 
                    document_number = '12345', 
                    country_code = 'KE', 
                    mobile_number = '0763000000', 
                    email = 'sender.name@example.com', 
                    address = 'UAE', ),
                destination = jenga_client.models.imt_within_equity_request_destination.IMTWithinEquityRequest_destination(
                    type = 'bank', 
                    country_code = 'KE', 
                    name = 'A N.Other', 
                    bank_code = '03', 
                    account_number = '101080530003', 
                    mobile_number = '0763123456', 
                    document_type = 'NationalId', 
                    document_number = '123456', 
                    email = 'recipient.name@example.com', 
                    address = 'Nairobi', ),
                transfer = jenga_client.models.imt_within_equity_request_transfer.IMTWithinEquityRequest_transfer(
                    type = 'InternalFundsTransfer', 
                    amount = '1000', 
                    currency_code = 'KES', 
                    reference = '123456789012', 
                    date = '2018-08-18', 
                    description = 'some remarks here', )
            )
        else:
            return IMTWithinEquityRequest(
                source = jenga_client.models.imt_within_equity_request_source.IMTWithinEquityRequest_source(
                    country_code = 'KE', 
                    name = 'Merchant name', 
                    account_number = '0011547896523', ),
                sender = jenga_client.models.imt_within_equity_request_sender.IMTWithinEquityRequest_sender(
                    name = 'Sender Name', 
                    document_type = 'NationalId', 
                    document_number = '12345', 
                    country_code = 'KE', 
                    mobile_number = '0763000000', 
                    email = 'sender.name@example.com', 
                    address = 'UAE', ),
                destination = jenga_client.models.imt_within_equity_request_destination.IMTWithinEquityRequest_destination(
                    type = 'bank', 
                    country_code = 'KE', 
                    name = 'A N.Other', 
                    bank_code = '03', 
                    account_number = '101080530003', 
                    mobile_number = '0763123456', 
                    document_type = 'NationalId', 
                    document_number = '123456', 
                    email = 'recipient.name@example.com', 
                    address = 'Nairobi', ),
                transfer = jenga_client.models.imt_within_equity_request_transfer.IMTWithinEquityRequest_transfer(
                    type = 'InternalFundsTransfer', 
                    amount = '1000', 
                    currency_code = 'KES', 
                    reference = '123456789012', 
                    date = '2018-08-18', 
                    description = 'some remarks here', ),
        )
        """

    def testIMTWithinEquityRequest(self):
        """Test IMTWithinEquityRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
