# coding: utf-8

"""
    Jenga API

    API for Jenga payment processing and transaction management

    The version of the OpenAPI document: 3.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jenga_client.models.payment_link_request import PaymentLinkRequest

class TestPaymentLinkRequest(unittest.TestCase):
    """PaymentLinkRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentLinkRequest:
        """Test PaymentLinkRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentLinkRequest`
        """
        model = PaymentLinkRequest()
        if include_optional:
            return PaymentLinkRequest(
                customers = [
                    jenga_client.models.payment_link_request_customers_inner.PaymentLinkRequest_customers_inner(
                        first_name = 'John', 
                        last_name = 'Doe', 
                        email = 'johndoe902@gmail.com', 
                        phone_number = '254764848636', 
                        first_address = '', 
                        country_code = 'KE', 
                        postal_or_zip_code = '00100', 
                        customer_external_ref = '575657788779', )
                    ],
                payment_link = jenga_client.models.payment_link_request_payment_link.PaymentLinkRequest_paymentLink(
                    expiry_date = '2024-03-22', 
                    sale_date = '2024-02-20', 
                    sale_type = 'SERVICE', 
                    payment_link_type = 'SINGLE', 
                    name = 'Hotel Reservation', 
                    description = 'Hotel Reservation', 
                    external_ref = '575657788779', 
                    payment_link_ref = '', 
                    redirect_url = 'https://v3.jengahq.io', 
                    amount_option = 'OPEN', 
                    amount = 400, 
                    currency = 'KES', ),
                notifications = [EMAIL, SMS]
            )
        else:
            return PaymentLinkRequest(
                customers = [
                    jenga_client.models.payment_link_request_customers_inner.PaymentLinkRequest_customers_inner(
                        first_name = 'John', 
                        last_name = 'Doe', 
                        email = 'johndoe902@gmail.com', 
                        phone_number = '254764848636', 
                        first_address = '', 
                        country_code = 'KE', 
                        postal_or_zip_code = '00100', 
                        customer_external_ref = '575657788779', )
                    ],
                payment_link = jenga_client.models.payment_link_request_payment_link.PaymentLinkRequest_paymentLink(
                    expiry_date = '2024-03-22', 
                    sale_date = '2024-02-20', 
                    sale_type = 'SERVICE', 
                    payment_link_type = 'SINGLE', 
                    name = 'Hotel Reservation', 
                    description = 'Hotel Reservation', 
                    external_ref = '575657788779', 
                    payment_link_ref = '', 
                    redirect_url = 'https://v3.jengahq.io', 
                    amount_option = 'OPEN', 
                    amount = 400, 
                    currency = 'KES', ),
        )
        """

    def testPaymentLinkRequest(self):
        """Test PaymentLinkRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
